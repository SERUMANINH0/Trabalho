rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Função auxiliar para verificar se o usuário está acessando seus próprios dados
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Função auxiliar para validar campos obrigatórios
    function hasRequiredFields(requiredFields) {
      return request.resource.data.keys().hasAll(requiredFields);
    }

    // Regras para a coleção de usuários
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) && hasRequiredFields(['name', 'email']);
      allow delete: if isOwner(userId);
    }

    // Regras para a coleção de transações
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid
                    && hasRequiredFields(['amount', 'description', 'category', 'date', 'type']);
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid
                    && request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Regras para a coleção de categorias
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Regras para a coleção de metas de orçamento
    match /budgetGoals/{goalId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid
                    && hasRequiredFields(['amount', 'category', 'period']);
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}